knitr::opts_chunk$set(echo = TRUE, fig.path='../images/')
count_hash = str_count(content, pattern = '#[[:alpha:]][[:alnum:]]*')
library(stringr)
library(dplyr)
library(ggplot2)
source(file = '../code/archive-functions.R')
emotion = read.csv(file = "../data/text-emotion.csv", stringsAsFactors = FALSE)
content = emotion$content
str(content)
char_num = lapply(content, nchar)
char_num = unlist(char_num)
summary(char_num)
hist(char_num, main = "Histogram of the characters in each content", xlab = "number of characters", breaks = seq(from = 1, to = 175, by = 5))
# Count the number of @ mentions (i.e. mention to another user) in the tweet contents.
count_at = str_count(content, pattern = '@\\w+')
# Display such frequencies, and make a barplot of these counts (i.e. number of tweets
# with 0 mentions, with 1 mention, with 2 mentions, etc).
table_at = as.data.frame(table(count_at))
table_at
barplot(table_at$Freq)
#Also write code to display the content of the tweet with 10 mentions.
index = which.max(count_at)
content[index]
count_hash = str_count(content, pattern = '#[[:alpha:]][[:alnum:]]*')
table_hash = as.data.frame(table(count_hash))
table_hash
barplot(table_hash$Freq)
all_hash<- unlist(str_extract_all(content, patter = "#[[:alpha:]][[:alnum:]]*"))
ave_hash = mean(nchar(all_hash)) - 1
ave_hash
hash_length = nchar(all_hash) - 1
hash_freq = table(hash_length)
hash_freq
max_hash = max(hash_freq)
print("The mode of the length of the hashtags are 4 and 9, where there are 97 for each 4 and 9")
ave_hash = mean(nchar(all_hash)) - 1
ave_hash
